version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: risk-monitor-postgres
    environment:
      POSTGRES_USER: riskmonitor
      POSTGRES_PASSWORD: securepassword123
      POSTGRES_DB: financial_risk_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - risk-monitor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U riskmonitor"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: risk-monitor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - risk-monitor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: risk-monitor-api
    environment:
      APP_ENV: development
      APP_PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: riskmonitor
      DB_PASSWORD: securepassword123
      DB_NAME: financial_risk_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-this
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - risk-monitor-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  risk-monitor-network:
    driver: bridge